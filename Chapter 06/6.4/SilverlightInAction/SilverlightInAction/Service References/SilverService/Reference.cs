//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 2.0.5.0
// 
namespace SilverlightInAction.SilverService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SilverService.SampleAsmxSoap")]
    public interface SampleAsmxSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetTime", ReplyAction="*")]
        System.IAsyncResult BeginGetTime(System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndGetTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCoolText", ReplyAction="*")]
        System.IAsyncResult BeginGetCoolText(SilverlightInAction.SilverService.GetCoolTextRequest request, System.AsyncCallback callback, object asyncState);
        
        SilverlightInAction.SilverService.GetCoolTextResponse EndGetCoolText(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetCoolTextRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetCoolText", Namespace="http://tempuri.org/", Order=0)]
        public SilverlightInAction.SilverService.GetCoolTextRequestBody Body;
        
        public GetCoolTextRequest() {
        }
        
        public GetCoolTextRequest(SilverlightInAction.SilverService.GetCoolTextRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetCoolTextRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int sampleNumber;
        
        public GetCoolTextRequestBody() {
        }
        
        public GetCoolTextRequestBody(int sampleNumber) {
            this.sampleNumber = sampleNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetCoolTextResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetCoolTextResponse", Namespace="http://tempuri.org/", Order=0)]
        public SilverlightInAction.SilverService.GetCoolTextResponseBody Body;
        
        public GetCoolTextResponse() {
        }
        
        public GetCoolTextResponse(SilverlightInAction.SilverService.GetCoolTextResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetCoolTextResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetCoolTextResult;
        
        public GetCoolTextResponseBody() {
        }
        
        public GetCoolTextResponseBody(string GetCoolTextResult) {
            this.GetCoolTextResult = GetCoolTextResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface SampleAsmxSoapChannel : SilverlightInAction.SilverService.SampleAsmxSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetCoolTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCoolTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SampleAsmxSoapClient : System.ServiceModel.ClientBase<SilverlightInAction.SilverService.SampleAsmxSoap>, SilverlightInAction.SilverService.SampleAsmxSoap {
        
        private BeginOperationDelegate onBeginGetTimeDelegate;
        
        private EndOperationDelegate onEndGetTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCoolTextDelegate;
        
        private EndOperationDelegate onEndGetCoolTextDelegate;
        
        private System.Threading.SendOrPostCallback onGetCoolTextCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SampleAsmxSoapClient() {
        }
        
        public SampleAsmxSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SampleAsmxSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SampleAsmxSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SampleAsmxSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetTimeCompletedEventArgs> GetTimeCompleted;
        
        public event System.EventHandler<GetCoolTextCompletedEventArgs> GetCoolTextCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightInAction.SilverService.SampleAsmxSoap.BeginGetTime(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTime(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.DateTime SilverlightInAction.SilverService.SampleAsmxSoap.EndGetTime(System.IAsyncResult result) {
            return base.Channel.EndGetTime(result);
        }
        
        private System.IAsyncResult OnBeginGetTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SilverlightInAction.SilverService.SampleAsmxSoap)(this)).BeginGetTime(callback, asyncState);
        }
        
        private object[] OnEndGetTime(System.IAsyncResult result) {
            System.DateTime retVal = ((SilverlightInAction.SilverService.SampleAsmxSoap)(this)).EndGetTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTimeCompleted(object state) {
            if ((this.GetTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTimeCompleted(this, new GetTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTimeAsync() {
            this.GetTimeAsync(null);
        }
        
        public void GetTimeAsync(object userState) {
            if ((this.onBeginGetTimeDelegate == null)) {
                this.onBeginGetTimeDelegate = new BeginOperationDelegate(this.OnBeginGetTime);
            }
            if ((this.onEndGetTimeDelegate == null)) {
                this.onEndGetTimeDelegate = new EndOperationDelegate(this.OnEndGetTime);
            }
            if ((this.onGetTimeCompletedDelegate == null)) {
                this.onGetTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetTimeDelegate, null, this.onEndGetTimeDelegate, this.onGetTimeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightInAction.SilverService.SampleAsmxSoap.BeginGetCoolText(SilverlightInAction.SilverService.GetCoolTextRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCoolText(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetCoolText(int sampleNumber, System.AsyncCallback callback, object asyncState) {
            SilverlightInAction.SilverService.GetCoolTextRequest inValue = new SilverlightInAction.SilverService.GetCoolTextRequest();
            inValue.Body = new SilverlightInAction.SilverService.GetCoolTextRequestBody();
            inValue.Body.sampleNumber = sampleNumber;
            return ((SilverlightInAction.SilverService.SampleAsmxSoap)(this)).BeginGetCoolText(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SilverlightInAction.SilverService.GetCoolTextResponse SilverlightInAction.SilverService.SampleAsmxSoap.EndGetCoolText(System.IAsyncResult result) {
            return base.Channel.EndGetCoolText(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndGetCoolText(System.IAsyncResult result) {
            SilverlightInAction.SilverService.GetCoolTextResponse retVal = ((SilverlightInAction.SilverService.SampleAsmxSoap)(this)).EndGetCoolText(result);
            return retVal.Body.GetCoolTextResult;
        }
        
        private System.IAsyncResult OnBeginGetCoolText(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int sampleNumber = ((int)(inValues[0]));
            return this.BeginGetCoolText(sampleNumber, callback, asyncState);
        }
        
        private object[] OnEndGetCoolText(System.IAsyncResult result) {
            string retVal = this.EndGetCoolText(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCoolTextCompleted(object state) {
            if ((this.GetCoolTextCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCoolTextCompleted(this, new GetCoolTextCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCoolTextAsync(int sampleNumber) {
            this.GetCoolTextAsync(sampleNumber, null);
        }
        
        public void GetCoolTextAsync(int sampleNumber, object userState) {
            if ((this.onBeginGetCoolTextDelegate == null)) {
                this.onBeginGetCoolTextDelegate = new BeginOperationDelegate(this.OnBeginGetCoolText);
            }
            if ((this.onEndGetCoolTextDelegate == null)) {
                this.onEndGetCoolTextDelegate = new EndOperationDelegate(this.OnEndGetCoolText);
            }
            if ((this.onGetCoolTextCompletedDelegate == null)) {
                this.onGetCoolTextCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCoolTextCompleted);
            }
            base.InvokeAsync(this.onBeginGetCoolTextDelegate, new object[] {
                        sampleNumber}, this.onEndGetCoolTextDelegate, this.onGetCoolTextCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SilverlightInAction.SilverService.SampleAsmxSoap CreateChannel() {
            return new SampleAsmxSoapClientChannel(this);
        }
        
        private class SampleAsmxSoapClientChannel : ChannelBase<SilverlightInAction.SilverService.SampleAsmxSoap>, SilverlightInAction.SilverService.SampleAsmxSoap {
            
            public SampleAsmxSoapClientChannel(System.ServiceModel.ClientBase<SilverlightInAction.SilverService.SampleAsmxSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetTime(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetTime", _args, callback, asyncState);
                return _result;
            }
            
            public System.DateTime EndGetTime(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.DateTime _result = ((System.DateTime)(base.EndInvoke("GetTime", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCoolText(SilverlightInAction.SilverService.GetCoolTextRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetCoolText", _args, callback, asyncState);
                return _result;
            }
            
            public SilverlightInAction.SilverService.GetCoolTextResponse EndGetCoolText(System.IAsyncResult result) {
                object[] _args = new object[0];
                SilverlightInAction.SilverService.GetCoolTextResponse _result = ((SilverlightInAction.SilverService.GetCoolTextResponse)(base.EndInvoke("GetCoolText", _args, result)));
                return _result;
            }
        }
    }
}
